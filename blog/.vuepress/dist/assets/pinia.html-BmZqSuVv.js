import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o,f as i}from"./app-C4tUi4gM.js";const a={},c=i('<h1 id="pinia" tabindex="-1"><a class="header-anchor" href="#pinia"><span><code>pinia</code></span></a></h1><h2 id="pinia的核心概念或者属性" tabindex="-1"><a class="header-anchor" href="#pinia的核心概念或者属性"><span><code>pinia</code>的核心概念或者属性</span></a></h2><p><code>state</code>、<code>getters</code>、<code>actions</code>。</p><h2 id="与vuex的区别" tabindex="-1"><a class="header-anchor" href="#与vuex的区别"><span>与<code>vuex</code>的区别</span></a></h2><ul><li>没有<code>mutation</code>，只有<code>action</code>。</li><li>完美支持<code>ts</code>。<code>vuex</code>支持<code>ts</code>还需要做一些额外的工作。</li><li>没有命名空间模块，<code>pinia</code>的<code>store</code>是扁平化结构，创建的多个<code>store</code>都是相互隔离的，没有嵌套关系。</li><li>不再需要注入、导入函数。</li></ul>',5),n=[c];function d(r,p){return o(),t("div",null,n)}const h=e(a,[["render",d],["__file","pinia.html.vue"]]),m=JSON.parse('{"path":"/VUE/pinia.html","title":"pinia","lang":"zh-CN","frontmatter":{"description":"pinia pinia的核心概念或者属性 state、getters、actions。 与vuex的区别 没有mutation，只有action。 完美支持ts。vuex支持ts还需要做一些额外的工作。 没有命名空间模块，pinia的store是扁平化结构，创建的多个store都是相互隔离的，没有嵌套关系。 不再需要注入、导入函数。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/VUE/pinia.html"}],["meta",{"property":"og:site_name","content":"🍑的博客 ！"}],["meta",{"property":"og:title","content":"pinia"}],["meta",{"property":"og:description","content":"pinia pinia的核心概念或者属性 state、getters、actions。 与vuex的区别 没有mutation，只有action。 完美支持ts。vuex支持ts还需要做一些额外的工作。 没有命名空间模块，pinia的store是扁平化结构，创建的多个store都是相互隔离的，没有嵌套关系。 不再需要注入、导入函数。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-20T06:06:03.000Z"}],["meta",{"property":"article:author","content":"🍑"}],["meta",{"property":"article:modified_time","content":"2024-08-20T06:06:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"pinia\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-20T06:06:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🍑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"pinia的核心概念或者属性","slug":"pinia的核心概念或者属性","link":"#pinia的核心概念或者属性","children":[]},{"level":2,"title":"与vuex的区别","slug":"与vuex的区别","link":"#与vuex的区别","children":[]}],"git":{"createdTime":1723794615000,"updatedTime":1724133963000,"contributors":[{"name":"songzhichao","email":"caoxu@boyetrade.com","commits":1}]},"readingTime":{"minutes":0.3,"words":91},"filePathRelative":"VUE/pinia.md","localizedDate":"2024年8月16日","excerpt":"\\n<h2><code>pinia</code>的核心概念或者属性</h2>\\n<p><code>state</code>、<code>getters</code>、<code>actions</code>。</p>\\n<h2>与<code>vuex</code>的区别</h2>\\n<ul>\\n<li>没有<code>mutation</code>，只有<code>action</code>。</li>\\n<li>完美支持<code>ts</code>。<code>vuex</code>支持<code>ts</code>还需要做一些额外的工作。</li>\\n<li>没有命名空间模块，<code>pinia</code>的<code>store</code>是扁平化结构，创建的多个<code>store</code>都是相互隔离的，没有嵌套关系。</li>\\n<li>不再需要注入、导入函数。</li>\\n</ul>","autoDesc":true}');export{h as comp,m as data};
