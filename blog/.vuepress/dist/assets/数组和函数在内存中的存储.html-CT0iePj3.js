import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,o as n,b as e,e as a}from"./app-C4tUi4gM.js";const r={},c=e("h1",{id:"数组和函数在内存中的存储",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#数组和函数在内存中的存储"},[e("span",null,"数组和函数在内存中的存储")])],-1),i=e("p",null,[e("code",null,"js"),a("中的数组存储大致需要分为两种情况：")],-1),l=e("ul",null,[e("li",null,"同种类型数据的数组分配连续的内存空间。"),e("li",null,"非同种类型数据的数组使用哈希映射分配内存空间。")],-1),p=e("blockquote",null,[e("p",null,"可以想象一下连续的内存空间只需要根据索引（指针）直接计算存储位置即可。如果是哈希映射那么首先需要计算索引值，然后如果索引值有冲突的场景下还需要进行二次查找（需要知道哈希的存储方式）。")],-1),s=[c,i,l,p];function m(d,_){return n(),o("div",null,s)}const E=t(r,[["render",m],["__file","数组和函数在内存中的存储.html.vue"]]),A=JSON.parse('{"path":"/JAVASCRIPT/%E6%95%B0%E7%BB%84%E5%92%8C%E5%87%BD%E6%95%B0%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E5%AD%98%E5%82%A8.html","title":"数组和函数在内存中的存储","lang":"zh-CN","frontmatter":{"description":"数组和函数在内存中的存储 js中的数组存储大致需要分为两种情况： 同种类型数据的数组分配连续的内存空间。 非同种类型数据的数组使用哈希映射分配内存空间。 可以想象一下连续的内存空间只需要根据索引（指针）直接计算存储位置即可。如果是哈希映射那么首先需要计算索引值，然后如果索引值有冲突的场景下还需要进行二次查找（需要知道哈希的存储方式）。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/JAVASCRIPT/%E6%95%B0%E7%BB%84%E5%92%8C%E5%87%BD%E6%95%B0%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E5%AD%98%E5%82%A8.html"}],["meta",{"property":"og:site_name","content":"🍑的博客 ！"}],["meta",{"property":"og:title","content":"数组和函数在内存中的存储"}],["meta",{"property":"og:description","content":"数组和函数在内存中的存储 js中的数组存储大致需要分为两种情况： 同种类型数据的数组分配连续的内存空间。 非同种类型数据的数组使用哈希映射分配内存空间。 可以想象一下连续的内存空间只需要根据索引（指针）直接计算存储位置即可。如果是哈希映射那么首先需要计算索引值，然后如果索引值有冲突的场景下还需要进行二次查找（需要知道哈希的存储方式）。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-20T06:06:03.000Z"}],["meta",{"property":"article:author","content":"🍑"}],["meta",{"property":"article:modified_time","content":"2024-08-20T06:06:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数组和函数在内存中的存储\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-20T06:06:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🍑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1723009479000,"updatedTime":1724133963000,"contributors":[{"name":"songzhichao","email":"caoxu@boyetrade.com","commits":1}]},"readingTime":{"minutes":0.51,"words":153},"filePathRelative":"JAVASCRIPT/数组和函数在内存中的存储.md","localizedDate":"2024年8月7日","excerpt":"\\n<p><code>js</code>中的数组存储大致需要分为两种情况：</p>\\n<ul>\\n<li>同种类型数据的数组分配连续的内存空间。</li>\\n<li>非同种类型数据的数组使用哈希映射分配内存空间。</li>\\n</ul>\\n<blockquote>\\n<p>可以想象一下连续的内存空间只需要根据索引（指针）直接计算存储位置即可。如果是哈希映射那么首先需要计算索引值，然后如果索引值有冲突的场景下还需要进行二次查找（需要知道哈希的存储方式）。</p>\\n</blockquote>\\n","autoDesc":true}');export{E as comp,A as data};
