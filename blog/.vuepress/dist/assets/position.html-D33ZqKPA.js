import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,o as t,f as i}from"./app-8HN3oAmX.js";const c={},d=i('<h1 id="position" tabindex="-1"><a class="header-anchor" href="#position"><span><code>position</code></span></a></h1><h2 id="position-1" tabindex="-1"><a class="header-anchor" href="#position-1"><span><code>position</code></span></a></h2><p><code>position</code>属性指定了元素的定位类型。</p><p><code>position</code>有以下属性值：</p><ol><li><code>static</code>默认值。没有定位，元素出现在正常的文档流中（忽略<code>top,bottom,left,right,z-index</code>声明）。</li><li><code>relative</code>生成相对定位的元素，相对于其元素本身所在正常位置进行定位。移动相对定位元素，但它原本所占的空间不会改变。相对定位元素经常被用来作为绝对定位元素的容器块。</li><li><code>absolute</code>生成绝对定位的元素，相对于值不为<code>static</code>的第一个父元素的<code>padding box</code>进行定位。<code>absolute</code>定位使元素的位置与文档流无关，因此不占据空间。<code>absolute</code>定位的元素和其他元素重叠。</li><li><code>fixed</code>（<code>老IE</code>不支持）生成固定定位的元素，相对于浏览器窗口进行定位。即使窗口是滚动的它也不会移动。注意：<code>fixed</code>定位在<code>IE7</code>和<code>IE8</code>下需要描述<code>!DOCTYPE</code>才能支持。<code>fixed</code>定位使元素的位置与文档流无关，因此不占据空间。<code>fixed</code>定位的元素和其他元素重叠。</li><li><code>sticky</code>生成粘性定位的元素。粘性定位的元素是依赖于用户的滚动，基于滚动位置，在<code>relative</code>与<code>fixed</code>定位之间切换。元素定位表现为在跨越特定阈值前为相对定位，之后为固定定位。<br> 它的表现就像<code>relative</code>， 而当页面滚动超出目标区域时，它的表现就像<code>fixed</code>，会固定在目标位置。</li><li><code>inherit</code>规定从父元素继承<code>position</code>属性的值。</li></ol><h2 id="绝对定位元素与非绝对定位元素的百分比计算" tabindex="-1"><a class="header-anchor" href="#绝对定位元素与非绝对定位元素的百分比计算"><span>绝对定位元素与非绝对定位元素的百分比计算</span></a></h2><ul><li>绝对定位元素的宽高百分比是相对于最近的<code>position</code>不为<code>static</code>的祖先元素的<code>padding box</code>来计算的。</li><li>非绝对定位元素的宽高百分比则是相对于父元素的<code>content box</code>来计算的。</li></ul>',7),n=[d];function a(p,s){return t(),o("div",null,n)}const h=e(c,[["render",a],["__file","position.html.vue"]]),m=JSON.parse('{"path":"/CSS/position.html","title":"position","lang":"zh-CN","frontmatter":{"description":"position position position属性指定了元素的定位类型。 position有以下属性值： static默认值。没有定位，元素出现在正常的文档流中（忽略top,bottom,left,right,z-index声明）。 relative生成相对定位的元素，相对于其元素本身所在正常位置进行定位。移动相对定位元素，但它原本所占的空间不会...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/CSS/position.html"}],["meta",{"property":"og:site_name","content":"🍑的博客 ！"}],["meta",{"property":"og:title","content":"position"}],["meta",{"property":"og:description","content":"position position position属性指定了元素的定位类型。 position有以下属性值： static默认值。没有定位，元素出现在正常的文档流中（忽略top,bottom,left,right,z-index声明）。 relative生成相对定位的元素，相对于其元素本身所在正常位置进行定位。移动相对定位元素，但它原本所占的空间不会..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-20T06:06:03.000Z"}],["meta",{"property":"article:author","content":"🍑"}],["meta",{"property":"article:modified_time","content":"2024-08-20T06:06:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"position\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-20T06:06:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🍑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"position","slug":"position-1","link":"#position-1","children":[]},{"level":2,"title":"绝对定位元素与非绝对定位元素的百分比计算","slug":"绝对定位元素与非绝对定位元素的百分比计算","link":"#绝对定位元素与非绝对定位元素的百分比计算","children":[]}],"git":{"createdTime":1723630143000,"updatedTime":1724133963000,"contributors":[{"name":"songzhichao","email":"caoxu@boyetrade.com","commits":1}]},"readingTime":{"minutes":1.64,"words":492},"filePathRelative":"CSS/position.md","localizedDate":"2024年8月14日","excerpt":"\\n<h2><code>position</code></h2>\\n<p><code>position</code>属性指定了元素的定位类型。</p>\\n<p><code>position</code>有以下属性值：</p>\\n<ol>\\n<li><code>static</code>默认值。没有定位，元素出现在正常的文档流中（忽略<code>top,bottom,left,right,z-index</code>声明）。</li>\\n<li><code>relative</code>生成相对定位的元素，相对于其元素本身所在正常位置进行定位。移动相对定位元素，但它原本所占的空间不会改变。相对定位元素经常被用来作为绝对定位元素的容器块。</li>\\n<li><code>absolute</code>生成绝对定位的元素，相对于值不为<code>static</code>的第一个父元素的<code>padding box</code>进行定位。<code>absolute</code>定位使元素的位置与文档流无关，因此不占据空间。<code>absolute</code>定位的元素和其他元素重叠。</li>\\n<li><code>fixed</code>（<code>老IE</code>不支持）生成固定定位的元素，相对于浏览器窗口进行定位。即使窗口是滚动的它也不会移动。注意：<code>fixed</code>定位在<code>IE7</code>和<code>IE8</code>下需要描述<code>!DOCTYPE</code>才能支持。<code>fixed</code>定位使元素的位置与文档流无关，因此不占据空间。<code>fixed</code>定位的元素和其他元素重叠。</li>\\n<li><code>sticky</code>生成粘性定位的元素。粘性定位的元素是依赖于用户的滚动，基于滚动位置，在<code>relative</code>与<code>fixed</code>定位之间切换。元素定位表现为在跨越特定阈值前为相对定位，之后为固定定位。<br>\\n它的表现就像<code>relative</code>， 而当页面滚动超出目标区域时，它的表现就像<code>fixed</code>，会固定在目标位置。</li>\\n<li><code>inherit</code>规定从父元素继承<code>position</code>属性的值。</li>\\n</ol>","autoDesc":true}');export{h as comp,m as data};
