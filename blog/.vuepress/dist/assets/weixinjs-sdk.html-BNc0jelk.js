import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as e,f as a}from"./app-C4tUi4gM.js";const t={},n=a(`<h1 id="weixinjs-sdk" tabindex="-1"><a class="header-anchor" href="#weixinjs-sdk"><span>weixinjs-sdk</span></a></h1><p><a href="https://developers.weixin.qq.com/doc/offiaccount/Getting_Started/Overview.html" target="_blank" rel="noopener noreferrer">微信 JS-SDK</a>是微信公众平台 面向网页开发者提供的基于微信内的网页开发工具包。</p><p>通过使用<code>微信JS-SDK</code>，网页开发者可借助微信高效地使用拍照、选图、语音、位置等手机系统的能力，同时可以直接使用微信分享、扫一扫、卡券、支付等微信特有的能力，为微信用户提供更优质的网页体验。</p><h2 id="js-sdk使用步骤" tabindex="-1"><a class="header-anchor" href="#js-sdk使用步骤"><span><code>js-sdk</code>使用步骤</span></a></h2><ol><li>绑定域名。<br> 先登录微信公众平台进入“公众号设置”的“功能设置”里填写“JS 接口安全域名”。<br> 备注：登录后可在“开发者中心”查看对应的接口权限。</li><li>引入<code>JS</code>文件。<br> 在需要调用<code>JS</code>接口的页面引入如下<code>JS</code>文件，（支持 https）：http://res.wx.qq.com/open/js/jweixin-1.6.0.js。<br> 如需进一步提升服务稳定性，当上述资源不可访问时，可改访问：http://res2.wx.qq.com/open/js/jweixin-1.6.0.js （支持 https）。<br> 备注：支持使用<code>AMD/CMD</code>标准模块加载方法加载。</li><li>通过<code>config</code>接口注入权限验证配置。<br> 所有需要使用<code>JS-SDK</code>的页面必须先注入配置信息，否则将无法调用（同一个<code>url</code>仅需调用一次，对于变化<code>url</code>的<code>SPA</code>的<code>web app</code>可在每次<code>url</code>变化时进行调用，目前<code>Android</code>微信客户端不支持<code>pushState</code>的<code>H5</code>新特性，所以使用<code>pushState</code>来实现<code>web app</code>的页面会导致签名失败，此问题会在<code>Android6.2</code>中修复）。<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">wx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> debug</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> appId</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 必填，公众号的唯一标识</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> timestamp</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> , </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 必填，生成签名的时间戳</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> nonceStr</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 必填，生成签名的随机串</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> signature</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 必填，签名</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> jsApiList</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [] </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 必填，需要使用的JS接口列表</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>通过<code>ready</code>接口处理成功验证。\\<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">wx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ready</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> () {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  // config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>通过<code>error</code>接口处理失败验证。\\<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">wx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  // config 信息验证失败会执行 error 函数，如签名过期导致验证失败，具体错误信息可以打开 config 的 debug 模式查看，也可以在返回的 res 参数中查看，对于 SPA 可以在这里更新签名。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>接口调用说明： 所有接口通过<code>wx</code>对象(也可使用<code>jWeixin</code>对象)来调用，参数是一个对象，除了每个接口本身需要传的参数之外，还有以下通用参数：</p><ol><li><code>success</code>：接口调用成功时执行的回调函数。</li><li><code>fail</code>：接口调用失败时执行的回调函数。</li><li><code>complete</code>：接口调用完成时执行的回调函数，无论成功或失败都会执行。</li><li><code>cancel</code>：用户点击取消时的回调函数，仅部分有用户取消操作的<code>api</code>才会用到。</li><li><code>trigger</code>：监听<code>Menu</code>中的按钮点击时触发的方法，该方法仅支持<code>Menu</code>中的相关接口。 备注：不要尝试在<code>trigger</code>中使用<code>ajax</code>异步请求修改本次分享的内容，因为客户端分享操作是一个同步操作，这时候使用<code>ajax</code>的回包会还没有返回。</li></ol><p>以上几个函数都带有一个参数，类型为对象，其中除了每个接口本身返回的数据之外，还有一个通用属性<code>errMsg</code>，其值格式如下：</p><p>调用成功时：<code>&quot;xxx:ok&quot;</code>，其中<code>xxx</code>为调用的接口名。</p><p>用户取消时：<code>&quot;xxx:cancel&quot;</code>，其中<code>xxx</code>为调用的接口名。</p><p>调用失败时：其值为具体错误信息。</p>`,11),l=[n];function d(h,r){return e(),s("div",null,l)}const p=i(t,[["render",d],["__file","weixinjs-sdk.html.vue"]]),c=JSON.parse('{"path":"/UNIAPP%E5%92%8CWX/weixinjs-sdk.html","title":"weixinjs-sdk","lang":"zh-CN","frontmatter":{"description":"weixinjs-sdk 微信 JS-SDK是微信公众平台 面向网页开发者提供的基于微信内的网页开发工具包。 通过使用微信JS-SDK，网页开发者可借助微信高效地使用拍照、选图、语音、位置等手机系统的能力，同时可以直接使用微信分享、扫一扫、卡券、支付等微信特有的能力，为微信用户提供更优质的网页体验。 js-sdk使用步骤 绑定域名。 先登录微信公众平台...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/UNIAPP%E5%92%8CWX/weixinjs-sdk.html"}],["meta",{"property":"og:site_name","content":"🍑的博客 ！"}],["meta",{"property":"og:title","content":"weixinjs-sdk"}],["meta",{"property":"og:description","content":"weixinjs-sdk 微信 JS-SDK是微信公众平台 面向网页开发者提供的基于微信内的网页开发工具包。 通过使用微信JS-SDK，网页开发者可借助微信高效地使用拍照、选图、语音、位置等手机系统的能力，同时可以直接使用微信分享、扫一扫、卡券、支付等微信特有的能力，为微信用户提供更优质的网页体验。 js-sdk使用步骤 绑定域名。 先登录微信公众平台..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-28T07:24:37.000Z"}],["meta",{"property":"article:author","content":"🍑"}],["meta",{"property":"article:modified_time","content":"2024-08-28T07:24:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"weixinjs-sdk\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-28T07:24:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🍑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"js-sdk使用步骤","slug":"js-sdk使用步骤","link":"#js-sdk使用步骤","children":[]}],"git":{"createdTime":1724829877000,"updatedTime":1724829877000,"contributors":[{"name":"songzhichao","email":"caoxu@boyetrade.com","commits":1}]},"readingTime":{"minutes":3.47,"words":1041},"filePathRelative":"UNIAPP和WX/weixinjs-sdk.md","localizedDate":"2024年8月28日","excerpt":"\\n<p><a href=\\"https://developers.weixin.qq.com/doc/offiaccount/Getting_Started/Overview.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">微信 JS-SDK</a>是微信公众平台 面向网页开发者提供的基于微信内的网页开发工具包。</p>\\n<p>通过使用<code>微信JS-SDK</code>，网页开发者可借助微信高效地使用拍照、选图、语音、位置等手机系统的能力，同时可以直接使用微信分享、扫一扫、卡券、支付等微信特有的能力，为微信用户提供更优质的网页体验。</p>","autoDesc":true}');export{p as comp,c as data};
