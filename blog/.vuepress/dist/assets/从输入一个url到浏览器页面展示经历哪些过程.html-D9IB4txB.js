import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,o as c,f as t}from"./app-C4tUi4gM.js";const d={},l=t('<h1 id="从输入一个url到浏览器页面展示经历哪些过程" tabindex="-1"><a class="header-anchor" href="#从输入一个url到浏览器页面展示经历哪些过程"><span>从输入一个<code>url</code>到浏览器页面展示经历哪些过程</span></a></h1><p>https://juejin.cn/post/6935232082482298911</p><p>一般会经历以下几个过程：</p><ol><li>首先，在浏览器地址栏中输入<code>url</code>。</li><li>浏览器先查看<code>浏览器缓存</code> --&gt; <code>操作系统缓存</code> --&gt; <code>路由器缓存</code>，如果缓存中有，会直接在屏幕中显示页面内容。如果没有，则跳到第三步操作。</li><li>发送<code>HTTP</code>请求前，需要域名解析（<code>DNS解析</code>），解析获取相应的<code>IP</code>地址。</li><li>浏览器向服务器发起<code>tcp连接</code>，与浏览器建立<code>tcp三次握手</code>。</li><li>握手成功后，浏览器向服务器发送<code>HTTP请求</code>，请求数据包。</li><li>服务器处理收到的请求，将数据（或错误信息，或重定向的新的<code>url</code>地址）返回至浏览器。</li><li>浏览器收到<code>HTTP响应</code>。</li><li>读取页面内容，浏览器渲染，解析<code>html源码</code>。</li><li>生成<code>Dom树</code>、解析<code>css样式</code>、<code>js交互</code>。</li><li>客户端和服务器交互。</li><li><code>ajax</code>查询。</li></ol><p>其中，步骤 2 的具体过程是：</p><ul><li>浏览器缓存：浏览器会记录<code>DNS</code>一段时间，因此，只是第一个地方解析<code>DNS</code>请求。</li><li>操作系统缓存：如果在浏览器缓存中不包含这个记录，则会使系统调用操作系统，获取操作系统的记录（保存最近的<code>DNS查询缓存</code>）。</li><li>路由器缓存：如果上述两个步骤均不能成功获取<code>DNS记录</code>，继续搜索路由器缓存。</li><li><code>ISP缓存</code>：若上述均失败，继续向<code>ISP</code>搜索。</li></ul>',6),i=[l];function r(n,a){return c(),o("div",null,i)}const m=e(d,[["render",r],["__file","从输入一个url到浏览器页面展示经历哪些过程.html.vue"]]),E=JSON.parse('{"path":"/JAVASCRIPT/%E4%BB%8E%E8%BE%93%E5%85%A5%E4%B8%80%E4%B8%AAurl%E5%88%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E9%A1%B5%E9%9D%A2%E5%B1%95%E7%A4%BA%E7%BB%8F%E5%8E%86%E5%93%AA%E4%BA%9B%E8%BF%87%E7%A8%8B.html","title":"从输入一个url到浏览器页面展示经历哪些过程","lang":"zh-CN","frontmatter":{"description":"从输入一个url到浏览器页面展示经历哪些过程 https://juejin.cn/post/6935232082482298911 一般会经历以下几个过程： 首先，在浏览器地址栏中输入url。 浏览器先查看浏览器缓存 --> 操作系统缓存 --> 路由器缓存，如果缓存中有，会直接在屏幕中显示页面内容。如果没有，则跳到第三步操作。 发送HTTP请求前，需...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/JAVASCRIPT/%E4%BB%8E%E8%BE%93%E5%85%A5%E4%B8%80%E4%B8%AAurl%E5%88%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E9%A1%B5%E9%9D%A2%E5%B1%95%E7%A4%BA%E7%BB%8F%E5%8E%86%E5%93%AA%E4%BA%9B%E8%BF%87%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"🍑的博客 ！"}],["meta",{"property":"og:title","content":"从输入一个url到浏览器页面展示经历哪些过程"}],["meta",{"property":"og:description","content":"从输入一个url到浏览器页面展示经历哪些过程 https://juejin.cn/post/6935232082482298911 一般会经历以下几个过程： 首先，在浏览器地址栏中输入url。 浏览器先查看浏览器缓存 --> 操作系统缓存 --> 路由器缓存，如果缓存中有，会直接在屏幕中显示页面内容。如果没有，则跳到第三步操作。 发送HTTP请求前，需..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-28T07:24:37.000Z"}],["meta",{"property":"article:author","content":"🍑"}],["meta",{"property":"article:modified_time","content":"2024-08-28T07:24:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"从输入一个url到浏览器页面展示经历哪些过程\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-28T07:24:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🍑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1723009479000,"updatedTime":1724829877000,"contributors":[{"name":"songzhichao","email":"caoxu@boyetrade.com","commits":2}]},"readingTime":{"minutes":1.34,"words":402},"filePathRelative":"JAVASCRIPT/从输入一个url到浏览器页面展示经历哪些过程.md","localizedDate":"2024年8月7日","excerpt":"\\n<p>https://juejin.cn/post/6935232082482298911</p>\\n<p>一般会经历以下几个过程：</p>\\n<ol>\\n<li>首先，在浏览器地址栏中输入<code>url</code>。</li>\\n<li>浏览器先查看<code>浏览器缓存</code> --&gt; <code>操作系统缓存</code> --&gt; <code>路由器缓存</code>，如果缓存中有，会直接在屏幕中显示页面内容。如果没有，则跳到第三步操作。</li>\\n<li>发送<code>HTTP</code>请求前，需要域名解析（<code>DNS解析</code>），解析获取相应的<code>IP</code>地址。</li>\\n<li>浏览器向服务器发起<code>tcp连接</code>，与浏览器建立<code>tcp三次握手</code>。</li>\\n<li>握手成功后，浏览器向服务器发送<code>HTTP请求</code>，请求数据包。</li>\\n<li>服务器处理收到的请求，将数据（或错误信息，或重定向的新的<code>url</code>地址）返回至浏览器。</li>\\n<li>浏览器收到<code>HTTP响应</code>。</li>\\n<li>读取页面内容，浏览器渲染，解析<code>html源码</code>。</li>\\n<li>生成<code>Dom树</code>、解析<code>css样式</code>、<code>js交互</code>。</li>\\n<li>客户端和服务器交互。</li>\\n<li><code>ajax</code>查询。</li>\\n</ol>","autoDesc":true}');export{m as comp,E as data};
