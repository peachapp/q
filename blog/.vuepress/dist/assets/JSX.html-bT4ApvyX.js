import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,o as t,f as o}from"./app-C4tUi4gM.js";const a={},l=o('<h1 id="为什么react会引入jsx" tabindex="-1"><a class="header-anchor" href="#为什么react会引入jsx"><span>为什么<code>react</code>会引入<code>JSX</code></span></a></h1><h2 id="思路" tabindex="-1"><a class="header-anchor" href="#思路"><span>思路</span></a></h2><ul><li>解释概念</li><li>想实现什么目的?</li><li>有哪些可选方案，为什么这个方案最好?</li><li><code>JSX</code>的工作原理</li></ul><h2 id="jsx是什么" tabindex="-1"><a class="header-anchor" href="#jsx是什么"><span><code>JSX</code>是什么</span></a></h2><ul><li><code>JSX</code>是一个<code>javascript</code>的语法扩展，<code>JSX</code>可以很好的描述<code>UI</code>应该呈现出它应有交互的本质形式。</li><li><code>JSX</code>其实是<code>React.createElement()</code>的语法糖。</li></ul><h2 id="react想实现什么目的" tabindex="-1"><a class="header-anchor" href="#react想实现什么目的"><span><code>React</code>想实现什么目的</span></a></h2><ul><li>需要实现声明式。</li><li>代码结构需要非常清晰和简洁，可读性强。</li><li>结构、样式和事件等能够实现高内聚低耦合，方便重用和组合。</li><li>不想引入新的概念和语法，只写<code>JavaScript</code>。</li></ul><h2 id="为什么jsx最好" tabindex="-1"><a class="header-anchor" href="#为什么jsx最好"><span>为什么<code>JSX</code>最好</span></a></h2><p>模板</p><ul><li><code>Vue.js</code>使用了基于<code>HTML</code>的模板语法，允许开发者声明式地将<code>DOM</code>绑定至底层<code>Vue</code>实例的数据。</li><li>引入太多概念，比如<code>Angular</code>就引入了控制器、作用域、服务等概念。</li></ul><h2 id="jsx工作原理" tabindex="-1"><a class="header-anchor" href="#jsx工作原理"><span><code>JSX</code>工作原理</span></a></h2><p><code>AST</code>抽象语法树：</p><ul><li>抽象语法树是源代码语法结构的一种抽象表示，它以树状的形式表现编程语言的语法结构，树上的每个节点都表示源码中的一种结构。</li></ul><p><code>react17</code>有新的<code>JSX</code>转换：</p><ul><li>旧的转换：<code>&quot;runtime&quot;: &quot;classic&quot;</code>，需要引入<code>React</code>。</li><li>新的转换：<code>&quot;runtime&quot;: &quot;automatic&quot;</code>, 会自动引入<code>jsx jsx()</code>，不需要引入<code>React</code>。</li></ul>',15),i=[l];function d(r,n){return t(),c("div",null,i)}const p=e(a,[["render",d],["__file","JSX.html.vue"]]),u=JSON.parse('{"path":"/REACT/JSX.html","title":"为什么react会引入JSX","lang":"zh-CN","frontmatter":{"description":"为什么react会引入JSX 思路 解释概念 想实现什么目的? 有哪些可选方案，为什么这个方案最好? JSX的工作原理 JSX是什么 JSX是一个javascript的语法扩展，JSX可以很好的描述UI应该呈现出它应有交互的本质形式。 JSX其实是React.createElement()的语法糖。 React想实现什么目的 需要实现声明式。 代码结构...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/REACT/JSX.html"}],["meta",{"property":"og:site_name","content":"🍑的博客 ！"}],["meta",{"property":"og:title","content":"为什么react会引入JSX"}],["meta",{"property":"og:description","content":"为什么react会引入JSX 思路 解释概念 想实现什么目的? 有哪些可选方案，为什么这个方案最好? JSX的工作原理 JSX是什么 JSX是一个javascript的语法扩展，JSX可以很好的描述UI应该呈现出它应有交互的本质形式。 JSX其实是React.createElement()的语法糖。 React想实现什么目的 需要实现声明式。 代码结构..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"🍑"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"为什么react会引入JSX\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🍑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"JSX是什么","slug":"jsx是什么","link":"#jsx是什么","children":[]},{"level":2,"title":"React想实现什么目的","slug":"react想实现什么目的","link":"#react想实现什么目的","children":[]},{"level":2,"title":"为什么JSX最好","slug":"为什么jsx最好","link":"#为什么jsx最好","children":[]},{"level":2,"title":"JSX工作原理","slug":"jsx工作原理","link":"#jsx工作原理","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.1,"words":331},"filePathRelative":"REACT/JSX.md","excerpt":"\\n<h2>思路</h2>\\n<ul>\\n<li>解释概念</li>\\n<li>想实现什么目的?</li>\\n<li>有哪些可选方案，为什么这个方案最好?</li>\\n<li><code>JSX</code>的工作原理</li>\\n</ul>\\n<h2><code>JSX</code>是什么</h2>\\n<ul>\\n<li><code>JSX</code>是一个<code>javascript</code>的语法扩展，<code>JSX</code>可以很好的描述<code>UI</code>应该呈现出它应有交互的本质形式。</li>\\n<li><code>JSX</code>其实是<code>React.createElement()</code>的语法糖。</li>\\n</ul>","autoDesc":true}');export{p as comp,u as data};
