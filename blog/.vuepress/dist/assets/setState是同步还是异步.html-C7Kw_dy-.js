import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o,f as c}from"./app-C4tUi4gM.js";const a={},s=c('<h1 id="setstate是同步还是异步" tabindex="-1"><a class="header-anchor" href="#setstate是同步还是异步"><span><code>setState</code>是同步还是异步</span></a></h1><p>在<code>React</code>中，如果是由<code>React</code>引发的事件处理（比如通过<code>onClick</code>引发的事件处理），调用<code>setState</code>不会同步更新<code>this.state</code>，除此之外的<code>setState</code>调用会同步更新<code>this.state</code>。所谓“除此之外”，指的是绕过<code>React</code>通过<code>addEventListener</code>直接添加的事件处理函数，还有通过<code>setTimeout/setInterval</code>产生的异步调用。</p><p>注意：<code>setState</code>的“异步”并不是说内部由异步代码实现，其实本身执行的过程和代码都是同步的，只是合成事件和钩子函数的调用顺序在更新之前，导致在合成事件和钩子函数中没法立马拿到更新后的值，形式了所谓的“异步”，当然可以通过第二个参数<code>setState(partialState, callback)</code>中的<code>callback</code>拿到更新后的结果。</p><p>综上，<code>setState</code>只在合成事件和<code>hook()</code>中是“异步”的，在原生事件和<code>setTimeout/setInterval</code>中都是同步的。</p>',4),d=[s];function n(r,i){return o(),t("div",null,d)}const h=e(a,[["render",n],["__file","setState是同步还是异步.html.vue"]]),m=JSON.parse('{"path":"/REACT/setState%E6%98%AF%E5%90%8C%E6%AD%A5%E8%BF%98%E6%98%AF%E5%BC%82%E6%AD%A5.html","title":"setState是同步还是异步","lang":"zh-CN","frontmatter":{"description":"setState是同步还是异步 在React中，如果是由React引发的事件处理（比如通过onClick引发的事件处理），调用setState不会同步更新this.state，除此之外的setState调用会同步更新this.state。所谓“除此之外”，指的是绕过React通过addEventListener直接添加的事件处理函数，还有通过setTi...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/REACT/setState%E6%98%AF%E5%90%8C%E6%AD%A5%E8%BF%98%E6%98%AF%E5%BC%82%E6%AD%A5.html"}],["meta",{"property":"og:site_name","content":"🍑的博客 ！"}],["meta",{"property":"og:title","content":"setState是同步还是异步"}],["meta",{"property":"og:description","content":"setState是同步还是异步 在React中，如果是由React引发的事件处理（比如通过onClick引发的事件处理），调用setState不会同步更新this.state，除此之外的setState调用会同步更新this.state。所谓“除此之外”，指的是绕过React通过addEventListener直接添加的事件处理函数，还有通过setTi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"🍑"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"setState是同步还是异步\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🍑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.8,"words":240},"filePathRelative":"REACT/setState是同步还是异步.md","excerpt":"\\n<p>在<code>React</code>中，如果是由<code>React</code>引发的事件处理（比如通过<code>onClick</code>引发的事件处理），调用<code>setState</code>不会同步更新<code>this.state</code>，除此之外的<code>setState</code>调用会同步更新<code>this.state</code>。所谓“除此之外”，指的是绕过<code>React</code>通过<code>addEventListener</code>直接添加的事件处理函数，还有通过<code>setTimeout/setInterval</code>产生的异步调用。</p>","autoDesc":true}');export{h as comp,m as data};
