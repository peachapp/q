import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,o as c,f as d}from"./app-8HN3oAmX.js";const l={},t=d('<h1 id="flex-box-弹性盒布局模型" tabindex="-1"><a class="header-anchor" href="#flex-box-弹性盒布局模型"><span><code>Flex box</code>（弹性盒布局模型）</span></a></h1><p><code>Flex</code>是<code>FlexibleBox</code>的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性。</p><p>任何一个容器都可以指定为<code>Flex</code>布局。行内元素也可以使用<code>Flex</code>布局。注意，设为<code>Flex</code>布局以后，子元素的<code>float</code>、<code>clear</code>和<code>vertical-align</code>属性将失效。</p><p>采用<code>Flex</code>布局的元素，称为<code>Flex容器</code>（<code>flex container</code>），简称&quot;容器&quot;。它的所有子元素自动成为容器成员，称为<code>Flex项目</code>（<code>flex item</code>），简称&quot;项目&quot;。</p><p>容器默认存在两根轴：水平的主轴（<code>main axis</code>）和垂直的交叉轴（<code>cross axis</code>），项目默认沿主轴排列。</p><p>以下六个属性设置在容器上：</p><ol><li><code>flex-direction</code>属性决定主轴的方向（即项目的排列方向）。</li><li><code>flex-wrap</code>属性定义，如果一条轴线排不下，如何换行。</li><li><code>flex-flow</code>属性是<code>flex-direction</code>属性和<code>flex-wrap</code>属性的简写形式，默认值为<code>row nowrap</code>。</li><li><code>justify-content</code>属性定义了项目在主轴上的对齐方式。</li><li><code>align-items</code>属性定义项目在交叉轴上的对齐方式。</li><li><code>align-content</code>属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</li></ol><p>以下六个属性设置在项目上：</p><ol><li><code>order</code>属性定义项目的排列顺序。数值越小，排列越靠前，默认为<code>0</code>。</li><li><code>flex-grow</code>属性定义项目的放大比例，默认为<code>0</code>，即如果存在剩余空间，也不放大。</li><li><code>flex-shrink</code>属性定义了项目的缩小比例，默认为<code>1</code>，即如果空间不足，该项目将缩小。</li><li><code>flex-basis</code>属性定义了在分配多余空间之前，项目占据的主轴空间。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为<code>auto</code>，即项目的本来大小。</li><li><code>flex</code>属性是<code>flex-grow</code>属性，<code>flex-shrink</code>属性和<code>flex-basis</code>属性的简写，默认值为<code>0 1 auto</code>。</li><li><code>align-self</code>属性允许单个项目有与其他项目不一样的对齐方式，可覆盖<code>align-items</code>属性。默认值为<code>auto</code>，表示继承父元素的<code>align-items</code>属性，如果没有父元素，则等同于<code>stretch</code>。</li></ol><p>总结：</p><p><code>flex</code>布局是<code>CSS3</code>新增的一种布局方式，我们可以通过将一个元素的<code>display</code>属性值设置为<code>flex</code>从而使它成为一个<code>Flex容器</code>，它的所有子元素都会成为它的项目。</p><p>一个容器默认有两条轴，一个是水平的主轴，一个是与主轴垂直的交叉轴。我们可以使用<code>flex-direction</code>来指定主轴的方向。</p><p>我们可以使用<code>justify-content</code>来指定元素在主轴上的排列方式，使用<code>align-items</code>来指定元素在交叉轴上的排列方式。还可以使用<code>flex-wrap</code>来规定当一行排列不下时的换行方式。</p><p>对于容器中的项目，我们可以使用<code>order</code>属性来指定项目的排列顺序。还可以使用<code>flex-grow</code>来指定当排列空间有剩余的时候，项目的放大比例。还可以使用<code>flex-shrink</code>来指定当排列空间不足时，项目的缩小比例。</p><p><a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noopener noreferrer">《Flex 布局教程：语法篇》</a></p><p><a href="http://www.ruanyifeng.com/blog/2015/07/flex-examples.html" target="_blank" rel="noopener noreferrer">《Flex 布局教程：实例篇》</a></p>',16),i=[t];function a(r,n){return c(),o("div",null,i)}const f=e(l,[["render",a],["__file","flex.html.vue"]]),s=JSON.parse('{"path":"/CSS/flex.html","title":"Flex box（弹性盒布局模型）","lang":"zh-CN","frontmatter":{"description":"Flex box（弹性盒布局模型） Flex是FlexibleBox的缩写，意为\\"弹性布局\\"，用来为盒状模型提供最大的灵活性。 任何一个容器都可以指定为Flex布局。行内元素也可以使用Flex布局。注意，设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。 采用Flex布局的元素，称为Flex容器（flex c...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/CSS/flex.html"}],["meta",{"property":"og:site_name","content":"🍑的博客 ！"}],["meta",{"property":"og:title","content":"Flex box（弹性盒布局模型）"}],["meta",{"property":"og:description","content":"Flex box（弹性盒布局模型） Flex是FlexibleBox的缩写，意为\\"弹性布局\\"，用来为盒状模型提供最大的灵活性。 任何一个容器都可以指定为Flex布局。行内元素也可以使用Flex布局。注意，设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。 采用Flex布局的元素，称为Flex容器（flex c..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-20T06:06:03.000Z"}],["meta",{"property":"article:author","content":"🍑"}],["meta",{"property":"article:modified_time","content":"2024-08-20T06:06:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Flex box（弹性盒布局模型）\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-20T06:06:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🍑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1723630143000,"updatedTime":1724133963000,"contributors":[{"name":"songzhichao","email":"caoxu@boyetrade.com","commits":1}]},"readingTime":{"minutes":2.8,"words":840},"filePathRelative":"CSS/flex.md","localizedDate":"2024年8月14日","excerpt":"\\n<p><code>Flex</code>是<code>FlexibleBox</code>的缩写，意为\\"弹性布局\\"，用来为盒状模型提供最大的灵活性。</p>\\n<p>任何一个容器都可以指定为<code>Flex</code>布局。行内元素也可以使用<code>Flex</code>布局。注意，设为<code>Flex</code>布局以后，子元素的<code>float</code>、<code>clear</code>和<code>vertical-align</code>属性将失效。</p>\\n<p>采用<code>Flex</code>布局的元素，称为<code>Flex容器</code>（<code>flex container</code>），简称\\"容器\\"。它的所有子元素自动成为容器成员，称为<code>Flex项目</code>（<code>flex item</code>），简称\\"项目\\"。</p>","autoDesc":true}');export{f as comp,s as data};
