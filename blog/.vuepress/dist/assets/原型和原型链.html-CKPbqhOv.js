import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,o as t,f as c}from"./app-C4tUi4gM.js";const p={},r=c('<h1 id="原型和原型链" tabindex="-1"><a class="header-anchor" href="#原型和原型链"><span>原型和原型链</span></a></h1><p>什么是原型：</p><p>每一个<code>JavaScript</code>对象（除了<code>null</code>) 都具有的一个属性，叫<code>__proto</code>，这个属性会指向该对象的原型（它的构造函数的<code>prototype</code>指向的对象）。</p><p>什么是原型链：</p><p>每个对象都有一个原型<code>__proto</code>，这个原型还可以有它自己的原型，以此类推，形成一个原型链。查找特定属性的时候，会先去这个对象里查找，如果没有的话就去它的原型对象里面查找，如果还是没有的话再去原型对象的原型对象里去查找。..... 这个操作被委托在整个原型链上，这个就是我们所说的原型链。</p><p>原型链的核心就是依赖对象的<code>__proto</code>的指向，当查找自身不存在的属性时，就一层层的扒出创建对象的构造函数，直至到<code>Object</code>时，就没有<code>__proto</code>指向了。</p><blockquote><p>原型：函数的<code>prototype</code>属性，原型链：对象的<code>_proto_</code>属性。</p></blockquote><p>原型链特点：</p><ol><li>就近原则，当要使用一个属性时，程序会优先查找离自己最近的，如果自己没有这个属性，它就会沿着原型链向上查找，直到到达 <code>Object</code>。</li><li>引用类型，当我们使用或者修改原型链上的属性时，其实使用的是同一个。</li><li>js 中每个函数都存在原型对象属性<code>prototype</code>。并且所有函数的默认原型都是<code>Object</code>的实例。</li><li>每个继承父函数的实例对象都包含一个内部属性<code>__proto</code>。该属性包含一个指针，指向父函数的<code>prototype</code>、若父函数的原型对象的<code>__proto</code>属性为再上一层函数。在此过程中就形成了原型链。</li></ol><p>优点：</p><p>实现继承，简化代码，实现代码重用。</p>',11),d=[r];function a(i,n){return t(),o("div",null,d)}const m=e(p,[["render",a],["__file","原型和原型链.html.vue"]]),s=JSON.parse('{"path":"/JAVASCRIPT/%E5%8E%9F%E5%9E%8B%E5%92%8C%E5%8E%9F%E5%9E%8B%E9%93%BE.html","title":"原型和原型链","lang":"zh-CN","frontmatter":{"description":"原型和原型链 什么是原型： 每一个JavaScript对象（除了null) 都具有的一个属性，叫__proto，这个属性会指向该对象的原型（它的构造函数的prototype指向的对象）。 什么是原型链： 每个对象都有一个原型__proto，这个原型还可以有它自己的原型，以此类推，形成一个原型链。查找特定属性的时候，会先去这个对象里查找，如果没有的话就去...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/JAVASCRIPT/%E5%8E%9F%E5%9E%8B%E5%92%8C%E5%8E%9F%E5%9E%8B%E9%93%BE.html"}],["meta",{"property":"og:site_name","content":"🍑的博客 ！"}],["meta",{"property":"og:title","content":"原型和原型链"}],["meta",{"property":"og:description","content":"原型和原型链 什么是原型： 每一个JavaScript对象（除了null) 都具有的一个属性，叫__proto，这个属性会指向该对象的原型（它的构造函数的prototype指向的对象）。 什么是原型链： 每个对象都有一个原型__proto，这个原型还可以有它自己的原型，以此类推，形成一个原型链。查找特定属性的时候，会先去这个对象里查找，如果没有的话就去..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-20T06:06:03.000Z"}],["meta",{"property":"article:author","content":"🍑"}],["meta",{"property":"article:modified_time","content":"2024-08-20T06:06:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"原型和原型链\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-20T06:06:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🍑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1723009479000,"updatedTime":1724133963000,"contributors":[{"name":"songzhichao","email":"caoxu@boyetrade.com","commits":1}]},"readingTime":{"minutes":1.57,"words":470},"filePathRelative":"JAVASCRIPT/原型和原型链.md","localizedDate":"2024年8月7日","excerpt":"\\n<p>什么是原型：</p>\\n<p>每一个<code>JavaScript</code>对象（除了<code>null</code>) 都具有的一个属性，叫<code>__proto</code>，这个属性会指向该对象的原型（它的构造函数的<code>prototype</code>指向的对象）。</p>\\n<p>什么是原型链：</p>\\n<p>每个对象都有一个原型<code>__proto</code>，这个原型还可以有它自己的原型，以此类推，形成一个原型链。查找特定属性的时候，会先去这个对象里查找，如果没有的话就去它的原型对象里面查找，如果还是没有的话再去原型对象的原型对象里去查找。..... 这个操作被委托在整个原型链上，这个就是我们所说的原型链。</p>","autoDesc":true}');export{m as comp,s as data};
