import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as d,f as c}from"./app-8HN3oAmX.js";const t={},m=c('<h1 id="commonjs模块和es6模块" tabindex="-1"><a class="header-anchor" href="#commonjs模块和es6模块"><span><code>CommonJS</code>模块和<code>ES6</code>模块</span></a></h1><p>相同点：</p><ol><li><code>CommonJS Module</code>和<code>ES6 Module</code>都可以对引⼊的对象进⾏赋值，即对对象内部属性的值进行改变。</li></ol><p>区别：</p><ol><li><code>CommonJS Module</code>是运行时加载，<code>ES6 Module</code>是编译时输出接口。</li><li><code>CommonJS Module</code>的<code>require()</code>命令同步加载模块，<code>ES6 Module</code>的<code>import</code>命令异步加载模块，有一个独立的模块依赖的解析阶段。</li><li><code>CommonJS Module</code>是对模块的浅拷贝，<code>ES6 Module</code>是对模块的引入，即<code>ES6 Module</code>只存只读，不能改变其值，具体点就是指针指向不能变，类似<code>const</code>。</li><li><code>import</code>的接口是<code>read-only</code>（只读状态），不能修改其变量值。即不能修改其变量的指针指向，但可以改变变量内部指针指向。可以对<code>CommonJS Module</code>重新赋值（改变指针指向），但是对<code>ES6 Module</code>重新赋值会编译报错。</li></ol>',5),n=[m];function l(i,r){return d(),e("div",null,n)}const p=o(t,[["render",l],["__file","CommonJS和ES6.html.vue"]]),u=JSON.parse('{"path":"/JAVASCRIPT/CommonJS%E5%92%8CES6.html","title":"CommonJS模块和ES6模块","lang":"zh-CN","frontmatter":{"description":"CommonJS模块和ES6模块 相同点： CommonJS Module和ES6 Module都可以对引⼊的对象进⾏赋值，即对对象内部属性的值进行改变。 区别： CommonJS Module是运行时加载，ES6 Module是编译时输出接口。 CommonJS Module的require()命令同步加载模块，ES6 Module的import命令...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/JAVASCRIPT/CommonJS%E5%92%8CES6.html"}],["meta",{"property":"og:site_name","content":"🍑的博客 ！"}],["meta",{"property":"og:title","content":"CommonJS模块和ES6模块"}],["meta",{"property":"og:description","content":"CommonJS模块和ES6模块 相同点： CommonJS Module和ES6 Module都可以对引⼊的对象进⾏赋值，即对对象内部属性的值进行改变。 区别： CommonJS Module是运行时加载，ES6 Module是编译时输出接口。 CommonJS Module的require()命令同步加载模块，ES6 Module的import命令..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-20T06:06:03.000Z"}],["meta",{"property":"article:author","content":"🍑"}],["meta",{"property":"article:modified_time","content":"2024-08-20T06:06:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CommonJS模块和ES6模块\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-20T06:06:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🍑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1723009479000,"updatedTime":1724133963000,"contributors":[{"name":"songzhichao","email":"caoxu@boyetrade.com","commits":1}]},"readingTime":{"minutes":0.75,"words":225},"filePathRelative":"JAVASCRIPT/CommonJS和ES6.md","localizedDate":"2024年8月7日","excerpt":"\\n<p>相同点：</p>\\n<ol>\\n<li><code>CommonJS Module</code>和<code>ES6 Module</code>都可以对引⼊的对象进⾏赋值，即对对象内部属性的值进行改变。</li>\\n</ol>\\n<p>区别：</p>\\n<ol>\\n<li><code>CommonJS Module</code>是运行时加载，<code>ES6 Module</code>是编译时输出接口。</li>\\n<li><code>CommonJS Module</code>的<code>require()</code>命令同步加载模块，<code>ES6 Module</code>的<code>import</code>命令异步加载模块，有一个独立的模块依赖的解析阶段。</li>\\n<li><code>CommonJS Module</code>是对模块的浅拷贝，<code>ES6 Module</code>是对模块的引入，即<code>ES6 Module</code>只存只读，不能改变其值，具体点就是指针指向不能变，类似<code>const</code>。</li>\\n<li><code>import</code>的接口是<code>read-only</code>（只读状态），不能修改其变量值。即不能修改其变量的指针指向，但可以改变变量内部指针指向。可以对<code>CommonJS Module</code>重新赋值（改变指针指向），但是对<code>ES6 Module</code>重新赋值会编译报错。</li>\\n</ol>","autoDesc":true}');export{p as comp,u as data};
