import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as i,f as o}from"./app-C4tUi4gM.js";const n="/assets/0001-hYkShjnC.png",a={},r=o('<h1 id="单项数据流" tabindex="-1"><a class="header-anchor" href="#单项数据流"><span>单项数据流</span></a></h1><p>以下是一个表示“单向数据流”理念的简单示意：</p><figure><img src="'+n+'" alt="单项数据流" tabindex="0" loading="lazy"><figcaption>单项数据流</figcaption></figure><ul><li>状态：驱动应用的数据源。</li><li>视图：以声明方式将状态映射到视图。</li><li>操作：响应在视图上的用户输入导致的状态变化。</li></ul><p>但是，当我们的应用遇到多个组件共享状态时，单向数据流的简洁性很容易被破坏：</p><ol><li>多个视图依赖于同一状态。</li><li>来自不同视图的行为需要变更同一状态。</li></ol>',6),l=[r];function p(c,s){return i(),e("div",null,l)}const h=t(a,[["render",p],["__file","单项数据流.html.vue"]]),_=JSON.parse('{"path":"/VUE/%E5%8D%95%E9%A1%B9%E6%95%B0%E6%8D%AE%E6%B5%81.html","title":"单项数据流","lang":"zh-CN","frontmatter":{"description":"单项数据流 以下是一个表示“单向数据流”理念的简单示意： 单项数据流单项数据流 状态：驱动应用的数据源。 视图：以声明方式将状态映射到视图。 操作：响应在视图上的用户输入导致的状态变化。 但是，当我们的应用遇到多个组件共享状态时，单向数据流的简洁性很容易被破坏： 多个视图依赖于同一状态。 来自不同视图的行为需要变更同一状态。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/VUE/%E5%8D%95%E9%A1%B9%E6%95%B0%E6%8D%AE%E6%B5%81.html"}],["meta",{"property":"og:site_name","content":"🍑的博客 ！"}],["meta",{"property":"og:title","content":"单项数据流"}],["meta",{"property":"og:description","content":"单项数据流 以下是一个表示“单向数据流”理念的简单示意： 单项数据流单项数据流 状态：驱动应用的数据源。 视图：以声明方式将状态映射到视图。 操作：响应在视图上的用户输入导致的状态变化。 但是，当我们的应用遇到多个组件共享状态时，单向数据流的简洁性很容易被破坏： 多个视图依赖于同一状态。 来自不同视图的行为需要变更同一状态。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-26T06:13:09.000Z"}],["meta",{"property":"article:author","content":"🍑"}],["meta",{"property":"article:modified_time","content":"2024-08-26T06:13:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"单项数据流\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-26T06:13:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🍑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1724652789000,"updatedTime":1724652789000,"contributors":[{"name":"songzhichao","email":"caoxu@boyetrade.com","commits":1}]},"readingTime":{"minutes":0.46,"words":139},"filePathRelative":"VUE/单项数据流.md","localizedDate":"2024年8月26日","excerpt":"\\n<p>以下是一个表示“单向数据流”理念的简单示意：</p>\\n<figure><figcaption>单项数据流</figcaption></figure>\\n<ul>\\n<li>状态：驱动应用的数据源。</li>\\n<li>视图：以声明方式将状态映射到视图。</li>\\n<li>操作：响应在视图上的用户输入导致的状态变化。</li>\\n</ul>\\n<p>但是，当我们的应用遇到多个组件共享状态时，单向数据流的简洁性很容易被破坏：</p>\\n<ol>\\n<li>多个视图依赖于同一状态。</li>\\n<li>来自不同视图的行为需要变更同一状态。</li>\\n</ol>\\n","autoDesc":true}');export{h as comp,_ as data};
