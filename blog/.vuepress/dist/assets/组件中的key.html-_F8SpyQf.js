import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,o as t,f as c}from"./app-C4tUi4gM.js";const d={},a=c('<h1 id="组件中的key" tabindex="-1"><a class="header-anchor" href="#组件中的key"><span>组件中的<code>key</code></span></a></h1><p><code>key</code>是给每一个<code>vnode</code>的唯一<code>ID</code>，可以依靠<code>key</code>，更准确、更快的找到<code>oldVnode</code>中对应的<code>vnode</code>节点。</p><ul><li>更准确：设置了<code>key</code>，就不是就地复用了，在<code>sameNode</code>方法中，<code>a.key === b.key</code>对比可以避免就地复用的情况，所以会更加准取。</li><li>更快：利用<code>key</code>的唯一性生成<code>map</code>对象来获取对应节点，比遍历方式更快。</li></ul>',3),n=[a];function r(i,p){return t(),o("div",null,n)}const l=e(d,[["render",r],["__file","组件中的key.html.vue"]]),s=JSON.parse('{"path":"/VUE/%E7%BB%84%E4%BB%B6%E4%B8%AD%E7%9A%84key.html","title":"组件中的key","lang":"zh-CN","frontmatter":{"description":"组件中的key key是给每一个vnode的唯一ID，可以依靠key，更准确、更快的找到oldVnode中对应的vnode节点。 更准确：设置了key，就不是就地复用了，在sameNode方法中，a.key === b.key对比可以避免就地复用的情况，所以会更加准取。 更快：利用key的唯一性生成map对象来获取对应节点，比遍历方式更快。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/VUE/%E7%BB%84%E4%BB%B6%E4%B8%AD%E7%9A%84key.html"}],["meta",{"property":"og:site_name","content":"🍑的博客 ！"}],["meta",{"property":"og:title","content":"组件中的key"}],["meta",{"property":"og:description","content":"组件中的key key是给每一个vnode的唯一ID，可以依靠key，更准确、更快的找到oldVnode中对应的vnode节点。 更准确：设置了key，就不是就地复用了，在sameNode方法中，a.key === b.key对比可以避免就地复用的情况，所以会更加准取。 更快：利用key的唯一性生成map对象来获取对应节点，比遍历方式更快。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-28T07:24:37.000Z"}],["meta",{"property":"article:author","content":"🍑"}],["meta",{"property":"article:modified_time","content":"2024-08-28T07:24:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"组件中的key\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-28T07:24:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🍑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1724829877000,"updatedTime":1724829877000,"contributors":[{"name":"songzhichao","email":"caoxu@boyetrade.com","commits":1}]},"readingTime":{"minutes":0.36,"words":107},"filePathRelative":"VUE/组件中的key.md","localizedDate":"2024年8月28日","excerpt":"\\n<p><code>key</code>是给每一个<code>vnode</code>的唯一<code>ID</code>，可以依靠<code>key</code>，更准确、更快的找到<code>oldVnode</code>中对应的<code>vnode</code>节点。</p>\\n<ul>\\n<li>更准确：设置了<code>key</code>，就不是就地复用了，在<code>sameNode</code>方法中，<code>a.key === b.key</code>对比可以避免就地复用的情况，所以会更加准取。</li>\\n<li>更快：利用<code>key</code>的唯一性生成<code>map</code>对象来获取对应节点，比遍历方式更快。</li>\\n</ul>","autoDesc":true}');export{l as comp,s as data};
