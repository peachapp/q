import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,o as t,f as c}from"./app-8HN3oAmX.js";const d={},p=c('<h1 id="跨域" tabindex="-1"><a class="header-anchor" href="#跨域"><span>跨域</span></a></h1><p>https://juejin.cn/post/6844903767226351623#heading-11</p><blockquote><p>浏览器从一个域名的网页去请求另一个域名的资源时，域名、端口、协议任一不同，都是跨域。<br> 在前后端分离的模式下，前后端的域名是不一致的，此时就会发生跨域访问问题。在请求的过程中我们要想获取数据一般都是 <code>POST/GET</code>请求，所以就会出现跨域问题。</p></blockquote><p>同源策略：</p><p>同源策略是一种约定，它是浏览器最核心也最基本的安全功能，如果缺少了同源策略，浏览器很容易受到<code>XSS</code>、<code>CSRF</code>等攻击。所谓同源是指&quot;<code>域名</code> + <code>端口</code> + <code>协议</code>&quot;三者相同，即便两个不同的域名指向同一个<code>ip地址</code>，也非同源。</p><p>同源策略限制内容：</p><ul><li><code>Cookie</code>、<code>LocalStorage</code>、<code>IndexedDB</code>等存储性内容。</li><li><code>DOM</code>节点。</li><li><code>AJAX</code>请求发送后，会被浏览器拦截。</li></ul><p>但是有三个标签允许跨域加载资源：</p><ul><li><code>&lt;img src=&quot;XXX&quot;&gt;</code></li><li><code>&lt;link href=&quot;XXX&quot;&gt;</code></li><li><code>&lt;script src=&quot;XXX&quot;&gt;</code></li></ul><p>常见跨域场景：</p><p>当主域名、子域名、端口号、协议中任意一个不相同时，都算作不同域。不同域之间相互请求资源，就算作“跨域”。</p><p>解决跨越问题：</p><ol><li>使用<code>ajax</code>的<code>jsonp</code>。缺点：请求方式只能是<code>GET</code>请求。</li><li>使用<code>CORS</code>。特点：前端代码和未处理跨域前一样，即普通的<code>ajax</code>请求，但服务器代码添加了一段解决跨域的代码。</li><li>使用代理<code>Proxy</code>，只在开发环境生效。</li></ol>',13),i=[p];function n(a,r){return t(),o("div",null,i)}const m=e(d,[["render",n],["__file","跨域.html.vue"]]),h=JSON.parse('{"path":"/JAVASCRIPT/%E8%B7%A8%E5%9F%9F.html","title":"跨域","lang":"zh-CN","frontmatter":{"description":"跨域 https://juejin.cn/post/6844903767226351623#heading-11 浏览器从一个域名的网页去请求另一个域名的资源时，域名、端口、协议任一不同，都是跨域。 在前后端分离的模式下，前后端的域名是不一致的，此时就会发生跨域访问问题。在请求的过程中我们要想获取数据一般都是 POST/GET请求，所以就会出现跨域问题...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/JAVASCRIPT/%E8%B7%A8%E5%9F%9F.html"}],["meta",{"property":"og:site_name","content":"🍑的博客 ！"}],["meta",{"property":"og:title","content":"跨域"}],["meta",{"property":"og:description","content":"跨域 https://juejin.cn/post/6844903767226351623#heading-11 浏览器从一个域名的网页去请求另一个域名的资源时，域名、端口、协议任一不同，都是跨域。 在前后端分离的模式下，前后端的域名是不一致的，此时就会发生跨域访问问题。在请求的过程中我们要想获取数据一般都是 POST/GET请求，所以就会出现跨域问题..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-21T14:14:25.000Z"}],["meta",{"property":"article:author","content":"🍑"}],["meta",{"property":"article:modified_time","content":"2024-08-21T14:14:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"跨域\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-21T14:14:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🍑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1723009479000,"updatedTime":1724249665000,"contributors":[{"name":"songzhichao","email":"caoxu@boyetrade.com","commits":2}]},"readingTime":{"minutes":1.28,"words":385},"filePathRelative":"JAVASCRIPT/跨域.md","localizedDate":"2024年8月7日","excerpt":"\\n<p>https://juejin.cn/post/6844903767226351623#heading-11</p>\\n<blockquote>\\n<p>浏览器从一个域名的网页去请求另一个域名的资源时，域名、端口、协议任一不同，都是跨域。<br>\\n在前后端分离的模式下，前后端的域名是不一致的，此时就会发生跨域访问问题。在请求的过程中我们要想获取数据一般都是 <code>POST/GET</code>请求，所以就会出现跨域问题。</p>\\n</blockquote>\\n<p>同源策略：</p>\\n<p>同源策略是一种约定，它是浏览器最核心也最基本的安全功能，如果缺少了同源策略，浏览器很容易受到<code>XSS</code>、<code>CSRF</code>等攻击。所谓同源是指\\"<code>域名</code> + <code>端口</code> + <code>协议</code>\\"三者相同，即便两个不同的域名指向同一个<code>ip地址</code>，也非同源。</p>","autoDesc":true}');export{m as comp,h as data};
