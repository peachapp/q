import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o,f as c}from"./app-C4tUi4gM.js";const i={},a=c('<h1 id="事件委托" tabindex="-1"><a class="header-anchor" href="#事件委托"><span>事件委托</span></a></h1><p>事件委托又名事件代理，即是把原本需要绑定在子元素的响应事件（<code>click</code>、<code>keydown</code>、<code>…</code>）委托给父元素，让父元素担当事件监听的职务。</p><p>原理：利用<code>DOM元素</code>的事件冒泡机制。</p><p>优点：</p><ul><li>提高<code>Javascript</code>性能，减少内存消耗。</li><li>动态添加<code>DOM元素</code>，不需要因为元素的变动而修改事件绑定。</li></ul><p>缺点：</p><ul><li>事件委托基于冒泡，对于不冒泡的事件不支持。</li><li>层级过多，冒泡过程中，事件可能会被某层阻止掉。</li><li>所有事件都用代理就可能会出现事件误判，好比把不应该触发事件的<code>DOM元素</code>绑上了事件。</li></ul>',7),n=[a];function r(p,d){return o(),t("div",null,n)}const m=e(i,[["render",r],["__file","事件委托.html.vue"]]),h=JSON.parse('{"path":"/JAVASCRIPT/%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%89%98.html","title":"事件委托","lang":"zh-CN","frontmatter":{"description":"事件委托 事件委托又名事件代理，即是把原本需要绑定在子元素的响应事件（click、keydown、…）委托给父元素，让父元素担当事件监听的职务。 原理：利用DOM元素的事件冒泡机制。 优点： 提高Javascript性能，减少内存消耗。 动态添加DOM元素，不需要因为元素的变动而修改事件绑定。 缺点： 事件委托基于冒泡，对于不冒泡的事件不支持。 层级过...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/JAVASCRIPT/%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%89%98.html"}],["meta",{"property":"og:site_name","content":"🍑的博客 ！"}],["meta",{"property":"og:title","content":"事件委托"}],["meta",{"property":"og:description","content":"事件委托 事件委托又名事件代理，即是把原本需要绑定在子元素的响应事件（click、keydown、…）委托给父元素，让父元素担当事件监听的职务。 原理：利用DOM元素的事件冒泡机制。 优点： 提高Javascript性能，减少内存消耗。 动态添加DOM元素，不需要因为元素的变动而修改事件绑定。 缺点： 事件委托基于冒泡，对于不冒泡的事件不支持。 层级过..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-20T06:06:03.000Z"}],["meta",{"property":"article:author","content":"🍑"}],["meta",{"property":"article:modified_time","content":"2024-08-20T06:06:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"事件委托\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-20T06:06:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🍑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1723009479000,"updatedTime":1724133963000,"contributors":[{"name":"songzhichao","email":"caoxu@boyetrade.com","commits":1}]},"readingTime":{"minutes":0.61,"words":182},"filePathRelative":"JAVASCRIPT/事件委托.md","localizedDate":"2024年8月7日","excerpt":"\\n<p>事件委托又名事件代理，即是把原本需要绑定在子元素的响应事件（<code>click</code>、<code>keydown</code>、<code>…</code>）委托给父元素，让父元素担当事件监听的职务。</p>\\n<p>原理：利用<code>DOM元素</code>的事件冒泡机制。</p>\\n<p>优点：</p>\\n<ul>\\n<li>提高<code>Javascript</code>性能，减少内存消耗。</li>\\n<li>动态添加<code>DOM元素</code>，不需要因为元素的变动而修改事件绑定。</li>\\n</ul>\\n<p>缺点：</p>\\n<ul>\\n<li>事件委托基于冒泡，对于不冒泡的事件不支持。</li>\\n<li>层级过多，冒泡过程中，事件可能会被某层阻止掉。</li>\\n<li>所有事件都用代理就可能会出现事件误判，好比把不应该触发事件的<code>DOM元素</code>绑上了事件。</li>\\n</ul>","autoDesc":true}');export{m as comp,h as data};
