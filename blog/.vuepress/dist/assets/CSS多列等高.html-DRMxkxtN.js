import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,o as t,f as d}from"./app-8HN3oAmX.js";const c={},a=d('<h1 id="css多列等高" tabindex="-1"><a class="header-anchor" href="#css多列等高"><span><code>CSS</code>多列等高</span></a></h1><p><code>CSS</code>多列等高即需要每个列的高度能与最高的那个列等齐。</p><p>实现方法：</p><ol><li>利用<code>padding-bottom</code>|<code>margin-bottom</code>正负值相抵，不会影响页面布局的特性。父容器设置超出隐藏。（<code>overflow:hidden</code>），这样父容器的高度就还是它里面的列没有设定<code>padding-bottom</code>时的高度，当它里面的任一列高度增加了，则父容器的高度被撑到里面最高那列的高度，其他比这列矮的列会用它们的<code>padding-bottom</code>补偿这部分高度差。</li><li>利用<code>table-cell</code>所有单元格高度都相等的特性，来实现多列等高。</li><li>利用<code>flex</code>布局中项目<code>align-items</code>属性默认为<code>stretch</code>，如果项目未设置高度或设为<code>auto</code>，将占满整个容器高度的特性，来实现多列等高。</li></ol><p><a href="https://juejin.im/post/5b0fb34151882515662238fd" target="_blank" rel="noopener noreferrer">《前端应该掌握的 CSS 实现多列等高布局》</a></p><p><a href="https://codepen.io/yangbo5207/post/equh" target="_blank" rel="noopener noreferrer">《CSS：多列等高布局》</a></p>',6),n=[a];function r(i,p){return t(),o("div",null,n)}const s=e(c,[["render",r],["__file","CSS多列等高.html.vue"]]),S=JSON.parse('{"path":"/CSS/CSS%E5%A4%9A%E5%88%97%E7%AD%89%E9%AB%98.html","title":"CSS多列等高","lang":"zh-CN","frontmatter":{"description":"CSS多列等高 CSS多列等高即需要每个列的高度能与最高的那个列等齐。 实现方法： 利用padding-bottom|margin-bottom正负值相抵，不会影响页面布局的特性。父容器设置超出隐藏。（overflow:hidden），这样父容器的高度就还是它里面的列没有设定padding-bottom时的高度，当它里面的任一列高度增加了，则父容器的高...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/CSS/CSS%E5%A4%9A%E5%88%97%E7%AD%89%E9%AB%98.html"}],["meta",{"property":"og:site_name","content":"🍑的博客 ！"}],["meta",{"property":"og:title","content":"CSS多列等高"}],["meta",{"property":"og:description","content":"CSS多列等高 CSS多列等高即需要每个列的高度能与最高的那个列等齐。 实现方法： 利用padding-bottom|margin-bottom正负值相抵，不会影响页面布局的特性。父容器设置超出隐藏。（overflow:hidden），这样父容器的高度就还是它里面的列没有设定padding-bottom时的高度，当它里面的任一列高度增加了，则父容器的高..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-20T06:06:03.000Z"}],["meta",{"property":"article:author","content":"🍑"}],["meta",{"property":"article:modified_time","content":"2024-08-20T06:06:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CSS多列等高\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-20T06:06:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🍑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1723630143000,"updatedTime":1724133963000,"contributors":[{"name":"songzhichao","email":"caoxu@boyetrade.com","commits":1}]},"readingTime":{"minutes":0.83,"words":249},"filePathRelative":"CSS/CSS多列等高.md","localizedDate":"2024年8月14日","excerpt":"\\n<p><code>CSS</code>多列等高即需要每个列的高度能与最高的那个列等齐。</p>\\n<p>实现方法：</p>\\n<ol>\\n<li>利用<code>padding-bottom</code>|<code>margin-bottom</code>正负值相抵，不会影响页面布局的特性。父容器设置超出隐藏。（<code>overflow:hidden</code>），这样父容器的高度就还是它里面的列没有设定<code>padding-bottom</code>时的高度，当它里面的任一列高度增加了，则父容器的高度被撑到里面最高那列的高度，其他比这列矮的列会用它们的<code>padding-bottom</code>补偿这部分高度差。</li>\\n<li>利用<code>table-cell</code>所有单元格高度都相等的特性，来实现多列等高。</li>\\n<li>利用<code>flex</code>布局中项目<code>align-items</code>属性默认为<code>stretch</code>，如果项目未设置高度或设为<code>auto</code>，将占满整个容器高度的特性，来实现多列等高。</li>\\n</ol>","autoDesc":true}');export{s as comp,S as data};
