import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,o as t,f as c}from"./app-8HN3oAmX.js";const i={},d=c('<h1 id="包含块" tabindex="-1"><a class="header-anchor" href="#包含块"><span>包含块</span></a></h1><h2 id="包含块-1" tabindex="-1"><a class="header-anchor" href="#包含块-1"><span>包含块</span></a></h2><p>包含块（<code>containing block</code>）就是元素用来计算和定位的一个框。</p><ol><li>根元素（很多场景下可以看成是<code>&lt;html&gt;</code>）被称为“初始包含块”，其尺寸等同于浏览器可视窗口的大小。</li><li>对于其他元素，如果该元素的<code>position</code>是<code>relative</code>或<code>static</code>，则“包含块”由其最近的块容器祖先元素的<code>content box</code>边界形成。</li><li>如果元素的<code>position</code>是<code>fixed</code>，则“包含块”是“初始包含块”。</li><li>如果元素的<code>position</code>是<code>absolute</code>，则“包含块”由最近的<code>position</code>不为 <code>static</code>的祖先元素建立，具体方式如下： <ul><li>如果该祖先元素是纯<code>inline</code>元素，则规则略复杂： <ul><li>假设给行内元素的前后各生成一个宽度为<code>0</code>的行内盒子（<code>inline box</code>），则这两个行内盒子的<code>padding box</code>外面的包围盒就是行内元素的“包含块”。</li><li>如果该行内元素被跨行分割了，那么“包含块”是未定义的，<code>CSS2.1</code>规范并没有明确定义，浏览器自行发挥，否则，“包含块”由该祖先元素的<code>padding box</code>边界形成。</li></ul></li><li>如果没有符合条件的祖先元素，则“包含块”是“初始包含块”。</li></ul></li></ol><h2 id="absolute的包含块计算方式跟正常流有何不同" tabindex="-1"><a class="header-anchor" href="#absolute的包含块计算方式跟正常流有何不同"><span><code>absolute</code>的包含块计算方式跟正常流有何不同</span></a></h2><ol><li>内联元素也可以作为“包含块”所在的元素。</li><li>“包含块”所在的元素不是父块级元素，而是最近的<code>position</code>不为<code>static</code>的祖先元素或根元素。</li><li>边界是<code>padding box</code>而不是<code>content box</code>。</li></ol>',6),n=[d];function l(a,s){return t(),o("div",null,n)}const h=e(i,[["render",l],["__file","包含块.html.vue"]]),m=JSON.parse('{"path":"/CSS/%E5%8C%85%E5%90%AB%E5%9D%97.html","title":"包含块","lang":"zh-CN","frontmatter":{"description":"包含块 包含块 包含块（containing block）就是元素用来计算和定位的一个框。 根元素（很多场景下可以看成是<html>）被称为“初始包含块”，其尺寸等同于浏览器可视窗口的大小。 对于其他元素，如果该元素的position是relative或static，则“包含块”由其最近的块容器祖先元素的content box边界形成。 如果元素的po...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/CSS/%E5%8C%85%E5%90%AB%E5%9D%97.html"}],["meta",{"property":"og:site_name","content":"🍑的博客 ！"}],["meta",{"property":"og:title","content":"包含块"}],["meta",{"property":"og:description","content":"包含块 包含块 包含块（containing block）就是元素用来计算和定位的一个框。 根元素（很多场景下可以看成是<html>）被称为“初始包含块”，其尺寸等同于浏览器可视窗口的大小。 对于其他元素，如果该元素的position是relative或static，则“包含块”由其最近的块容器祖先元素的content box边界形成。 如果元素的po..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-20T06:06:03.000Z"}],["meta",{"property":"article:author","content":"🍑"}],["meta",{"property":"article:modified_time","content":"2024-08-20T06:06:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"包含块\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-20T06:06:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🍑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"包含块","slug":"包含块-1","link":"#包含块-1","children":[]},{"level":2,"title":"absolute的包含块计算方式跟正常流有何不同","slug":"absolute的包含块计算方式跟正常流有何不同","link":"#absolute的包含块计算方式跟正常流有何不同","children":[]}],"git":{"createdTime":1723630143000,"updatedTime":1724133963000,"contributors":[{"name":"songzhichao","email":"caoxu@boyetrade.com","commits":1}]},"readingTime":{"minutes":1.3,"words":391},"filePathRelative":"CSS/包含块.md","localizedDate":"2024年8月14日","excerpt":"\\n<h2>包含块</h2>\\n<p>包含块（<code>containing block</code>）就是元素用来计算和定位的一个框。</p>\\n<ol>\\n<li>根元素（很多场景下可以看成是<code>&lt;html&gt;</code>）被称为“初始包含块”，其尺寸等同于浏览器可视窗口的大小。</li>\\n<li>对于其他元素，如果该元素的<code>position</code>是<code>relative</code>或<code>static</code>，则“包含块”由其最近的块容器祖先元素的<code>content box</code>边界形成。</li>\\n<li>如果元素的<code>position</code>是<code>fixed</code>，则“包含块”是“初始包含块”。</li>\\n<li>如果元素的<code>position</code>是<code>absolute</code>，则“包含块”由最近的<code>position</code>不为 <code>static</code>的祖先元素建立，具体方式如下：\\n<ul>\\n<li>如果该祖先元素是纯<code>inline</code>元素，则规则略复杂：\\n<ul>\\n<li>假设给行内元素的前后各生成一个宽度为<code>0</code>的行内盒子（<code>inline box</code>），则这两个行内盒子的<code>padding box</code>外面的包围盒就是行内元素的“包含块”。</li>\\n<li>如果该行内元素被跨行分割了，那么“包含块”是未定义的，<code>CSS2.1</code>规范并没有明确定义，浏览器自行发挥，否则，“包含块”由该祖先元素的<code>padding box</code>边界形成。</li>\\n</ul>\\n</li>\\n<li>如果没有符合条件的祖先元素，则“包含块”是“初始包含块”。</li>\\n</ul>\\n</li>\\n</ol>","autoDesc":true}');export{h as comp,m as data};
