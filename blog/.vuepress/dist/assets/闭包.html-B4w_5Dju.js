import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o,f as a}from"./app-8HN3oAmX.js";const p={},r=a('<h1 id="闭包" tabindex="-1"><a class="header-anchor" href="#闭包"><span>闭包</span></a></h1><p>闭包就是能够读取其他函数内部变量的函数。例如在<code>javascript</code>中，只有函数内部的子函数才能读取局部变量，所以闭包可以理解成“定义在一个函数内部的函数”。在本质上，闭包是将函数内部和函数外部连接起来的桥梁。</p><p>作用：访问函数内部变量、保持函数在环境中一直存在，不会被垃圾回收机制处理。</p><p>优点：方便调用上下文中声明的局部变量、逻辑紧密，可以在一个函数中再创建个函数，避免了传参的问题。</p><p>缺点：</p><ul><li>使用闭包，使函数在执行完后不被销毁，保留在内存中，所以如果大量使用闭包，就会造成内存泄漏，内存消耗很大。</li><li>变量会驻留在内存中，造成内存损耗。（解决：把闭包的函数设置为<code>null</code>。）</li></ul><p>应用：防抖、节流。</p>',7),c=[r];function i(n,l){return o(),t("div",null,c)}const d=e(p,[["render",i],["__file","闭包.html.vue"]]),h=JSON.parse('{"path":"/JAVASCRIPT/%E9%97%AD%E5%8C%85.html","title":"闭包","lang":"zh-CN","frontmatter":{"description":"闭包 闭包就是能够读取其他函数内部变量的函数。例如在javascript中，只有函数内部的子函数才能读取局部变量，所以闭包可以理解成“定义在一个函数内部的函数”。在本质上，闭包是将函数内部和函数外部连接起来的桥梁。 作用：访问函数内部变量、保持函数在环境中一直存在，不会被垃圾回收机制处理。 优点：方便调用上下文中声明的局部变量、逻辑紧密，可以在一个函数...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/JAVASCRIPT/%E9%97%AD%E5%8C%85.html"}],["meta",{"property":"og:site_name","content":"🍑的博客 ！"}],["meta",{"property":"og:title","content":"闭包"}],["meta",{"property":"og:description","content":"闭包 闭包就是能够读取其他函数内部变量的函数。例如在javascript中，只有函数内部的子函数才能读取局部变量，所以闭包可以理解成“定义在一个函数内部的函数”。在本质上，闭包是将函数内部和函数外部连接起来的桥梁。 作用：访问函数内部变量、保持函数在环境中一直存在，不会被垃圾回收机制处理。 优点：方便调用上下文中声明的局部变量、逻辑紧密，可以在一个函数..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-28T07:24:37.000Z"}],["meta",{"property":"article:author","content":"🍑"}],["meta",{"property":"article:modified_time","content":"2024-08-28T07:24:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"闭包\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-28T07:24:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🍑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1723009479000,"updatedTime":1724829877000,"contributors":[{"name":"songzhichao","email":"caoxu@boyetrade.com","commits":2}]},"readingTime":{"minutes":0.82,"words":246},"filePathRelative":"JAVASCRIPT/闭包.md","localizedDate":"2024年8月7日","excerpt":"\\n<p>闭包就是能够读取其他函数内部变量的函数。例如在<code>javascript</code>中，只有函数内部的子函数才能读取局部变量，所以闭包可以理解成“定义在一个函数内部的函数”。在本质上，闭包是将函数内部和函数外部连接起来的桥梁。</p>\\n<p>作用：访问函数内部变量、保持函数在环境中一直存在，不会被垃圾回收机制处理。</p>\\n<p>优点：方便调用上下文中声明的局部变量、逻辑紧密，可以在一个函数中再创建个函数，避免了传参的问题。</p>\\n<p>缺点：</p>\\n<ul>\\n<li>使用闭包，使函数在执行完后不被销毁，保留在内存中，所以如果大量使用闭包，就会造成内存泄漏，内存消耗很大。</li>\\n<li>变量会驻留在内存中，造成内存损耗。（解决：把闭包的函数设置为<code>null</code>。）</li>\\n</ul>","autoDesc":true}');export{d as comp,h as data};
