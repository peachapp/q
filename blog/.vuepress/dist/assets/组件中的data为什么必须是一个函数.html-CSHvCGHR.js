import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as a,f as o}from"./app-C4tUi4gM.js";const d={},c=o('<h1 id="组件中的data为什么必须是一个函数" tabindex="-1"><a class="header-anchor" href="#组件中的data为什么必须是一个函数"><span>组件中的<code>data</code>为什么必须是一个函数</span></a></h1><p><code>new Vue()</code>实例中，<code>data</code>可以直接是一个对象，在<code>vue</code>组件中，<code>data</code>为什么必须是一个函数呢？</p><p>因为组件是可以复用的，在<code>JavaScript</code>里对象是引用关系。如果组件中的<code>data</code>是一个对象，那么组件实例中的<code>data</code>属性值会相互污染，产生副作用。所以组件中的<code>data</code>必须是一个函数，这样每个组件实例就可以维护一份被返回对象的独立的拷贝，<code>new Vue</code>实例是不会被复用的，因此不会存在以上问题。</p><ol><li><code>vue</code>组件是用来复用的，为了防止<code>data</code>复用，需要将其定义为函数。</li><li><code>vue</code>组件中的<code>data</code>数据都应该是相互隔离，互不影响的。组件每复用一次，<code>data</code>数据就应该被复制一次。当某一处复用组件中<code>data</code>数据被改变时，其他复用组件中的<code>data</code>数据不受影响，就需要通过<code>data</code>函数返回一个对象作为组件的状态。</li><li>当组件中的<code>data</code>写成函数形式，数据以函数返回值形式定义，这样每复用一次组件，就会返回一份新的<code>data</code>，拥有自己的作用域，类似于给每个组件实例创建一个私有的数据空间，让各个组件实例维护各自的数据。</li><li>当组件中的<code>data</code>写成对象形式，这些实例用的是同一个构造函数，由于<code>JavaScript</code>的特性，所有的组件实例共用了一个<code>data</code>，就会造成一处改变全都改变的结果。</li></ol>',4),r=[c];function i(n,p){return a(),t("div",null,r)}const s=e(d,[["render",i],["__file","组件中的data为什么必须是一个函数.html.vue"]]),B=JSON.parse('{"path":"/VUE/%E7%BB%84%E4%BB%B6%E4%B8%AD%E7%9A%84data%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BF%85%E9%A1%BB%E6%98%AF%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0.html","title":"组件中的data为什么必须是一个函数","lang":"zh-CN","frontmatter":{"description":"组件中的data为什么必须是一个函数 new Vue()实例中，data可以直接是一个对象，在vue组件中，data为什么必须是一个函数呢？ 因为组件是可以复用的，在JavaScript里对象是引用关系。如果组件中的data是一个对象，那么组件实例中的data属性值会相互污染，产生副作用。所以组件中的data必须是一个函数，这样每个组件实例就可以维护一...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/VUE/%E7%BB%84%E4%BB%B6%E4%B8%AD%E7%9A%84data%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BF%85%E9%A1%BB%E6%98%AF%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0.html"}],["meta",{"property":"og:site_name","content":"🍑的博客 ！"}],["meta",{"property":"og:title","content":"组件中的data为什么必须是一个函数"}],["meta",{"property":"og:description","content":"组件中的data为什么必须是一个函数 new Vue()实例中，data可以直接是一个对象，在vue组件中，data为什么必须是一个函数呢？ 因为组件是可以复用的，在JavaScript里对象是引用关系。如果组件中的data是一个对象，那么组件实例中的data属性值会相互污染，产生副作用。所以组件中的data必须是一个函数，这样每个组件实例就可以维护一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-20T06:06:03.000Z"}],["meta",{"property":"article:author","content":"🍑"}],["meta",{"property":"article:modified_time","content":"2024-08-20T06:06:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"组件中的data为什么必须是一个函数\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-20T06:06:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🍑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1723794615000,"updatedTime":1724133963000,"contributors":[{"name":"songzhichao","email":"caoxu@boyetrade.com","commits":1}]},"readingTime":{"minutes":1.42,"words":427},"filePathRelative":"VUE/组件中的data为什么必须是一个函数.md","localizedDate":"2024年8月16日","excerpt":"\\n<p><code>new Vue()</code>实例中，<code>data</code>可以直接是一个对象，在<code>vue</code>组件中，<code>data</code>为什么必须是一个函数呢？</p>\\n<p>因为组件是可以复用的，在<code>JavaScript</code>里对象是引用关系。如果组件中的<code>data</code>是一个对象，那么组件实例中的<code>data</code>属性值会相互污染，产生副作用。所以组件中的<code>data</code>必须是一个函数，这样每个组件实例就可以维护一份被返回对象的独立的拷贝，<code>new Vue</code>实例是不会被复用的，因此不会存在以上问题。</p>","autoDesc":true}');export{s as comp,B as data};
