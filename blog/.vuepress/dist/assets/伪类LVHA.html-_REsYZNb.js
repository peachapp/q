import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,o as c,f as d}from"./app-8HN3oAmX.js";const t={},i=d('<h1 id="伪类lvha" tabindex="-1"><a class="header-anchor" href="#伪类lvha"><span>伪类<code>LVHA</code></span></a></h1><p><code>a</code>标签有四种状态：链接访问前、链接访问后、鼠标滑过、激活，分别对应四种伪类：<code>:link</code>、<code>:visited</code>、<code>:hover</code>、<code>:active</code>。</p><p>当链接未访问过时：</p><ol><li>当鼠标滑过<code>a</code>链接时，同时满足<code>:link</code>、<code>:hover</code>两种状态，要显示<code>a</code>标签鼠标滑过时的样式（<code>:hover</code>），必须将<code>:hover</code>伪类声明放到<code>:link</code>之后；</li><li>当鼠标点击激活<code>a</code>链接时，同时满足<code>:link</code>、<code>:hover</code>、<code>:active</code>三种状态，要显示<code>a</code>标签激活时的样式（<code>:active</code>），必须将<code>:active</code>伪类声明放到<code>:link</code>和<code>:hover</code>之后。因此得出<code>LVHA</code>这个顺序。</li></ol><p>当链接访问过时，情况基本同上，只不过需要将<code>:link</code>换成<code>:visited</code>。</p><p>这个顺序能不能变？可以，但也只有<code>:link</code>和<code>:visited</code>可以交换位置，因为一个链接要么访问过要么没访问过，不可能同时满足，也就不存在覆盖的问题。</p>',6),a=[i];function r(n,l){return c(),o("div",null,a)}const s=e(t,[["render",r],["__file","伪类LVHA.html.vue"]]),m=JSON.parse('{"path":"/CSS/%E4%BC%AA%E7%B1%BBLVHA.html","title":"伪类LVHA","lang":"zh-CN","frontmatter":{"description":"伪类LVHA a标签有四种状态：链接访问前、链接访问后、鼠标滑过、激活，分别对应四种伪类：:link、:visited、:hover、:active。 当链接未访问过时： 当鼠标滑过a链接时，同时满足:link、:hover两种状态，要显示a标签鼠标滑过时的样式（:hover），必须将:hover伪类声明放到:link之后； 当鼠标点击激活a链接时，同...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/CSS/%E4%BC%AA%E7%B1%BBLVHA.html"}],["meta",{"property":"og:site_name","content":"🍑的博客 ！"}],["meta",{"property":"og:title","content":"伪类LVHA"}],["meta",{"property":"og:description","content":"伪类LVHA a标签有四种状态：链接访问前、链接访问后、鼠标滑过、激活，分别对应四种伪类：:link、:visited、:hover、:active。 当链接未访问过时： 当鼠标滑过a链接时，同时满足:link、:hover两种状态，要显示a标签鼠标滑过时的样式（:hover），必须将:hover伪类声明放到:link之后； 当鼠标点击激活a链接时，同..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-20T06:06:03.000Z"}],["meta",{"property":"article:author","content":"🍑"}],["meta",{"property":"article:modified_time","content":"2024-08-20T06:06:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"伪类LVHA\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-20T06:06:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🍑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1723630143000,"updatedTime":1724133963000,"contributors":[{"name":"songzhichao","email":"caoxu@boyetrade.com","commits":1}]},"readingTime":{"minutes":0.78,"words":235},"filePathRelative":"CSS/伪类LVHA.md","localizedDate":"2024年8月14日","excerpt":"\\n<p><code>a</code>标签有四种状态：链接访问前、链接访问后、鼠标滑过、激活，分别对应四种伪类：<code>:link</code>、<code>:visited</code>、<code>:hover</code>、<code>:active</code>。</p>\\n<p>当链接未访问过时：</p>\\n<ol>\\n<li>当鼠标滑过<code>a</code>链接时，同时满足<code>:link</code>、<code>:hover</code>两种状态，要显示<code>a</code>标签鼠标滑过时的样式（<code>:hover</code>），必须将<code>:hover</code>伪类声明放到<code>:link</code>之后；</li>\\n<li>当鼠标点击激活<code>a</code>链接时，同时满足<code>:link</code>、<code>:hover</code>、<code>:active</code>三种状态，要显示<code>a</code>标签激活时的样式（<code>:active</code>），必须将<code>:active</code>伪类声明放到<code>:link</code>和<code>:hover</code>之后。因此得出<code>LVHA</code>这个顺序。</li>\\n</ol>","autoDesc":true}');export{s as comp,m as data};
