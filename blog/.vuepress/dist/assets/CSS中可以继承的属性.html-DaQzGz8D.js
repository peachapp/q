import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o,f as c}from"./app-8HN3oAmX.js";const i={},r=c('<h1 id="css中可以继承的属性" tabindex="-1"><a class="header-anchor" href="#css中可以继承的属性"><span><code>CSS</code>中可以继承的属性</span></a></h1><p>每个<code>CSS</code>属性定义的概述都指出了这个属性是默认继承的，还是默认不继承的。这决定当没有为元素的属性指定值时该如何计算值。</p><p>当元素的一个继承属性没有指定值时，则取父元素的同属性的计算值。只有文档根元素取该属性的概述中给定的初始值（这里的意思应该是在该属性本身的定义中的默认值）。</p><p>当元素的一个非继承属性（在<code>Mozilla code</code>里有时称之为<code>reset property</code>）没有指定值时，则取属性的初始值<code>initial value</code>（该值在该属性的概述里被指定）。</p><p>有继承性的属性：</p><ol><li>字体系列属性：<code>font、font-family、font-weight、font-size、font-style、font-variant、font-stretch、font-size-adjust</code></li><li>文本系列属性：<code>text-indent、text-align、text-shadow、line-height、word-spacing、letter-spacing、text-transform、direction、color</code></li><li>表格布局属性：<code>caption-side border-collapse empty-cells</code></li><li>列表属性：<code>list-style-type、list-style-image、list-style-position、list-style</code></li><li>光标属性：<code>cursor</code></li><li>元素可见性：<code>visibility</code></li><li>还有一些不常用的：<code>speak，page</code>，设置嵌套引用的引号类型 <code>quotes</code> 等属性</li></ol><p>注意：当一个属性不是继承属性时，可以使用 <code>inherit</code> 关键字指定一个属性应从父元素继承它的值，<code>inherit</code> 关键字用于显式地指定继承性，可用于任何继承性|非继承性属性。</p><p>总结：</p><p>每一个属性在定义中都给出了这个属性是否具有继承性，一个具有继承性的属性会在没有指定值的时候，使用父元素的同属性的值来作为自己的值。</p><p>一般具有继承性的属性有，字体相关的属性，<code>font-size</code> 和 <code>font-weight</code> 等。文本相关的属性，<code>color</code> 和 <code>text-align</code> 等。 表格的一些布局属性、列表属性如 <code>list-style</code> 等。还有光标属性 <code>cursor</code>、元素可见性 <code>visibility</code>。</p><p>当一个属性不是继承属性的时候，我们也可以通过将它的值设置为 <code>inherit</code> 来使它从父元素获取同名的属性值来继承。</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/inheritance" target="_blank" rel="noopener noreferrer">《继承属性》</a></p><p><a href="https://www.jianshu.com/p/34044e3c9317" target="_blank" rel="noopener noreferrer">《CSS 有哪些属性可以继承？》</a></p>',13),d=[r];function a(n,p){return o(),t("div",null,d)}const m=e(i,[["render",a],["__file","CSS中可以继承的属性.html.vue"]]),h=JSON.parse('{"path":"/CSS/CSS%E4%B8%AD%E5%8F%AF%E4%BB%A5%E7%BB%A7%E6%89%BF%E7%9A%84%E5%B1%9E%E6%80%A7.html","title":"CSS中可以继承的属性","lang":"zh-CN","frontmatter":{"description":"CSS中可以继承的属性 每个CSS属性定义的概述都指出了这个属性是默认继承的，还是默认不继承的。这决定当没有为元素的属性指定值时该如何计算值。 当元素的一个继承属性没有指定值时，则取父元素的同属性的计算值。只有文档根元素取该属性的概述中给定的初始值（这里的意思应该是在该属性本身的定义中的默认值）。 当元素的一个非继承属性（在Mozilla code里有...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/CSS/CSS%E4%B8%AD%E5%8F%AF%E4%BB%A5%E7%BB%A7%E6%89%BF%E7%9A%84%E5%B1%9E%E6%80%A7.html"}],["meta",{"property":"og:site_name","content":"🍑的博客 ！"}],["meta",{"property":"og:title","content":"CSS中可以继承的属性"}],["meta",{"property":"og:description","content":"CSS中可以继承的属性 每个CSS属性定义的概述都指出了这个属性是默认继承的，还是默认不继承的。这决定当没有为元素的属性指定值时该如何计算值。 当元素的一个继承属性没有指定值时，则取父元素的同属性的计算值。只有文档根元素取该属性的概述中给定的初始值（这里的意思应该是在该属性本身的定义中的默认值）。 当元素的一个非继承属性（在Mozilla code里有..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-20T06:06:03.000Z"}],["meta",{"property":"article:author","content":"🍑"}],["meta",{"property":"article:modified_time","content":"2024-08-20T06:06:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CSS中可以继承的属性\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-20T06:06:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🍑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1723630143000,"updatedTime":1724133963000,"contributors":[{"name":"songzhichao","email":"caoxu@boyetrade.com","commits":1}]},"readingTime":{"minutes":1.9,"words":569},"filePathRelative":"CSS/CSS中可以继承的属性.md","localizedDate":"2024年8月14日","excerpt":"\\n<p>每个<code>CSS</code>属性定义的概述都指出了这个属性是默认继承的，还是默认不继承的。这决定当没有为元素的属性指定值时该如何计算值。</p>\\n<p>当元素的一个继承属性没有指定值时，则取父元素的同属性的计算值。只有文档根元素取该属性的概述中给定的初始值（这里的意思应该是在该属性本身的定义中的默认值）。</p>\\n<p>当元素的一个非继承属性（在<code>Mozilla code</code>里有时称之为<code>reset property</code>）没有指定值时，则取属性的初始值<code>initial value</code>（该值在该属性的概述里被指定）。</p>","autoDesc":true}');export{m as comp,h as data};
