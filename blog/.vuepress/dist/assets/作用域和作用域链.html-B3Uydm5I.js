import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o,f as i}from"./app-8HN3oAmX.js";const c={},p=i('<h1 id="作用域和作用域链" tabindex="-1"><a class="header-anchor" href="#作用域和作用域链"><span>作用域和作用域链</span></a></h1><p>作用域是在运行时代码中某些特定部分变量、函数和对象的可访问性。换句话说，作用域决定了代码区块中变量和其他资源的可见性。</p><p>作用域最大的用处就是隔离变量，不同作用域下同名变量不会有冲突。</p><p>作用域分为全局作用域、函数作用域、块级作用域。</p><ol><li>作用域属于一个函数，一个函数产生了不一样的作用域。</li><li><code>函数名.[[scope]]</code>函数的隐式属性。</li><li><code>[[scope]]</code>指的就是作用域，其中存储了执行期上下文的集合，而这一集合就是作用域链。</li><li>查找变量过程：从作用域链的顶端依次向下查找（如：在函数里面查找变量，就从这个函数的作用域链的顶端依次向下查找变量）。</li></ol><p>函数的执行期上下文：</p><ol><li>当函数执行的前一刻，会创建一个称为执行期上下文的内部对象<code>AO</code>。</li><li>一个执行期上下文定义了一个函数执行时的环境（也就是函数预编译创建<code>AO</code>后下面的步骤操作），函数每次执行时对应的执行上下文都是独一无二的。</li><li>多次调用一个函数会导致创建多个执行上下文，当函数执行完毕，它所产生的执行上下文会被销毁。</li></ol><p>作用域和执行上下文之间最大的区别：</p><p>执行上下文在运行时确定，随时可能改变；作用域在定义时确定，并且不会改变。</p>',9),a=[p];function r(n,l){return o(),t("div",null,a)}const m=e(c,[["render",r],["__file","作用域和作用域链.html.vue"]]),h=JSON.parse('{"path":"/JAVASCRIPT/%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%92%8C%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE.html","title":"作用域和作用域链","lang":"zh-CN","frontmatter":{"description":"作用域和作用域链 作用域是在运行时代码中某些特定部分变量、函数和对象的可访问性。换句话说，作用域决定了代码区块中变量和其他资源的可见性。 作用域最大的用处就是隔离变量，不同作用域下同名变量不会有冲突。 作用域分为全局作用域、函数作用域、块级作用域。 作用域属于一个函数，一个函数产生了不一样的作用域。 函数名.[[scope]]函数的隐式属性。 [[sc...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/JAVASCRIPT/%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%92%8C%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE.html"}],["meta",{"property":"og:site_name","content":"🍑的博客 ！"}],["meta",{"property":"og:title","content":"作用域和作用域链"}],["meta",{"property":"og:description","content":"作用域和作用域链 作用域是在运行时代码中某些特定部分变量、函数和对象的可访问性。换句话说，作用域决定了代码区块中变量和其他资源的可见性。 作用域最大的用处就是隔离变量，不同作用域下同名变量不会有冲突。 作用域分为全局作用域、函数作用域、块级作用域。 作用域属于一个函数，一个函数产生了不一样的作用域。 函数名.[[scope]]函数的隐式属性。 [[sc..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-20T06:06:03.000Z"}],["meta",{"property":"article:author","content":"🍑"}],["meta",{"property":"article:modified_time","content":"2024-08-20T06:06:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"作用域和作用域链\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-20T06:06:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"🍑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1723009479000,"updatedTime":1724133963000,"contributors":[{"name":"songzhichao","email":"caoxu@boyetrade.com","commits":1}]},"readingTime":{"minutes":1.42,"words":427},"filePathRelative":"JAVASCRIPT/作用域和作用域链.md","localizedDate":"2024年8月7日","excerpt":"\\n<p>作用域是在运行时代码中某些特定部分变量、函数和对象的可访问性。换句话说，作用域决定了代码区块中变量和其他资源的可见性。</p>\\n<p>作用域最大的用处就是隔离变量，不同作用域下同名变量不会有冲突。</p>\\n<p>作用域分为全局作用域、函数作用域、块级作用域。</p>\\n<ol>\\n<li>作用域属于一个函数，一个函数产生了不一样的作用域。</li>\\n<li><code>函数名.[[scope]]</code>函数的隐式属性。</li>\\n<li><code>[[scope]]</code>指的就是作用域，其中存储了执行期上下文的集合，而这一集合就是作用域链。</li>\\n<li>查找变量过程：从作用域链的顶端依次向下查找（如：在函数里面查找变量，就从这个函数的作用域链的顶端依次向下查找变量）。</li>\\n</ol>","autoDesc":true}');export{m as comp,h as data};
